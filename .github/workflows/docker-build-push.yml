name: Build & Push (compose services)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  workflow_dispatch:

env:
  DOCKERHUB_NAMESPACE: justiph

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      matrix:
        include:
          - id: python-extractor
            context: ./python-extractor
            dockerfile: ./python-extractor/Dockerfile
            suffix: python-extractor
          - id: ts-backend
            context: ./ts-backend
            dockerfile: ./ts-backend/Dockerfile
            suffix: ts-backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image name dynamically
        id: vars
        run: echo "IMAGE=${{ env.DOCKERHUB_NAMESPACE }}/rag-be-${{ matrix.suffix }}" >> $GITHUB_ENV

      - name: Docker meta (auto tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=${{ matrix.id }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push ${{ matrix.id }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
